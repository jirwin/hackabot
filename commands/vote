#!/usr/bin/env python

##HACKABOT_HELP##
# Mirwinbot Vote System
# usage:
#  !vote new <topic> | !vote <choice> | !vote
##HACKABOT_HELP##

import MySQLdb
import hackabot
from hackabot.client import Client

def get_dbh(config):
  """
  Return a mysqldb connection
  """
  try:
    return MySQLdb.connect(host=config.get('hostname'), db=config.get('database'),
                           user=config.get('username'), passwd=config.get('password'))
  except MySQLdb.Error, (errno, errstr):
      raise DBError("DB connection failed: [%s] %s" % (errno, errstr))

def main():  
  hbc = Client()
  config = hbc.conf.find('.//database')
  dbh = get_dbh(config) 
  
  msg = hbc.readline()
  nick = hbc.sent_by()
  chan = hbc.channel()

  cur = dbh.cursor()
  cur.execute("SELECT id, creator, poll, created FROM votes WHERE channel = %s ORDER BY id DESC LIMIT 1;", (chan,))

  empty = False

  if cur.rowcount != 0:
    (id, creator, poll, created) = cur.fetchone()
  else:
    empty = True

  if not msg:
    #Just print out the current vote
    if empty:
      print "send No poll!"
    else:
      print "sendnext"
      print "Current poll: {0}".format(poll)
      cur.execute("SELECT count(id) AS count, choice FROM vote_choices WHERE vote = %s AND channel = %s GROUP BY choice ORDER BY count DESC;", (id, chan,))
      for each in cur:
        print "  {0}: {1}".format(each[1],each[0])
    
  elif msg[0:3] == "new":
    #start a new poll
    cur.execute("INSERT INTO votes (creator, poll, created, channel) VALUES (%s,%s,NOW(),%s);", (nick, msg[4:], chan,))
    print "send New poll created, start your votes!"

  else:
    if empty:
      print "send No poll!"
    else:
      cur.execute("SELECT vote FROM vote_choices WHERE voter = %s AND channel = %s AND vote = %s;", (nick, chan, id,))
      if cur.rowcount == 0:
        cur.execute("INSERT INTO vote_choices (vote, choice, voter, channel) VALUES (%s,%s,%s,%s);", (id, msg, nick, chan,))
        print "send Vote accepted."
      else:
        if msg != cur.fetchone()[0]:
          cur.execute("UPDATE vote_choices SET choice = %s WHERE voter = %s AND channel = %s AND vote = %s;", (msg, nick, chan, id,))
          print "send Vote changed."

if __name__ == "__main__":
  main()
